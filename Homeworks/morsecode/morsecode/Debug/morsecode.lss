
morsecode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000224  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000278  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000a21  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b1  00000000  00000000  00000d29  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000371  00000000  00000000  000013da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000174c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003ad  00000000  00000000  00001770  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000052d  00000000  00000000  00001b1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  0000204a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 10 01 	jmp	0x220	; 0x220 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
int main(void)
{
	int	a ;   // local variable for more than one dot/dash 
    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);  //   << bite shift for PB5   | means or
  80:	25 9a       	sbi	0x04, 5	; 4

    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);   // logicky sucin &   ~negace
  82:	2d 98       	cbi	0x05, 5	; 5
        // Pause several miliseconds
        _delay_ms(SHORT_DELAY);	
															// D  -..
        // Invert LED in Data Register
        // PORTB = PORTB xor 0010 0000
        PORTB = PORTB ^ (1<<LED_GREEN);						// -
  84:	90 e2       	ldi	r25, 0x20	; 32
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	2f ef       	ldi	r18, 0xFF	; 255
  88:	39 e6       	ldi	r19, 0x69	; 105
  8a:	48 e1       	ldi	r20, 0x18	; 24
  8c:	21 50       	subi	r18, 0x01	; 1
  8e:	30 40       	sbci	r19, 0x00	; 0
  90:	40 40       	sbci	r20, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <main+0xc>
  94:	00 c0       	rjmp	.+0      	; 0x96 <main+0x16>
  96:	00 00       	nop
  98:	85 b1       	in	r24, 0x05	; 5
  9a:	89 27       	eor	r24, r25
  9c:	85 b9       	out	0x05, r24	; 5
  9e:	5f ef       	ldi	r21, 0xFF	; 255
  a0:	8d e3       	ldi	r24, 0x3D	; 61
  a2:	29 e4       	ldi	r18, 0x49	; 73
  a4:	51 50       	subi	r21, 0x01	; 1
  a6:	80 40       	sbci	r24, 0x00	; 0
  a8:	20 40       	sbci	r18, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x24>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x2e>
  ae:	00 00       	nop
		_delay_ms(LONG_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
  b0:	2d 98       	cbi	0x05, 5	; 5
  b2:	3f ef       	ldi	r19, 0xFF	; 255
  b4:	49 e6       	ldi	r20, 0x69	; 105
  b6:	58 e1       	ldi	r21, 0x18	; 24
  b8:	31 50       	subi	r19, 0x01	; 1
  ba:	40 40       	sbci	r20, 0x00	; 0
  bc:	50 40       	sbci	r21, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <main+0x38>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <main+0x42>
  c2:	00 00       	nop
		_delay_ms(SHORT_DELAY);
			
		for(a=0;a<2;a++)									// ..
			{	
				PORTB = PORTB ^ (1<<LED_GREEN);
  c4:	85 b1       	in	r24, 0x05	; 5
  c6:	89 27       	eor	r24, r25
  c8:	85 b9       	out	0x05, r24	; 5
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	29 e6       	ldi	r18, 0x69	; 105
  ce:	38 e1       	ldi	r19, 0x18	; 24
  d0:	81 50       	subi	r24, 0x01	; 1
  d2:	20 40       	sbci	r18, 0x00	; 0
  d4:	30 40       	sbci	r19, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x50>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x5a>
  da:	00 00       	nop
				_delay_ms(SHORT_DELAY);
				PORTB = PORTB & ~(1<<LED_GREEN);
  dc:	2d 98       	cbi	0x05, 5	; 5
  de:	4f ef       	ldi	r20, 0xFF	; 255
  e0:	59 e6       	ldi	r21, 0x69	; 105
  e2:	88 e1       	ldi	r24, 0x18	; 24
  e4:	41 50       	subi	r20, 0x01	; 1
  e6:	50 40       	sbci	r21, 0x00	; 0
  e8:	80 40       	sbci	r24, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0x64>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x6e>
  ee:	00 00       	nop
		PORTB = PORTB & ~(1<<LED_GREEN);
		_delay_ms(SHORT_DELAY);
			
		for(a=0;a<2;a++)									// ..
			{	
				PORTB = PORTB ^ (1<<LED_GREEN);
  f0:	85 b1       	in	r24, 0x05	; 5
  f2:	89 27       	eor	r24, r25
  f4:	85 b9       	out	0x05, r24	; 5
  f6:	2f ef       	ldi	r18, 0xFF	; 255
  f8:	39 e6       	ldi	r19, 0x69	; 105
  fa:	48 e1       	ldi	r20, 0x18	; 24
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	30 40       	sbci	r19, 0x00	; 0
 100:	40 40       	sbci	r20, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <main+0x7c>
 104:	00 c0       	rjmp	.+0      	; 0x106 <main+0x86>
 106:	00 00       	nop
				_delay_ms(SHORT_DELAY);
				PORTB = PORTB & ~(1<<LED_GREEN);
 108:	2d 98       	cbi	0x05, 5	; 5
 10a:	5f ef       	ldi	r21, 0xFF	; 255
 10c:	89 e6       	ldi	r24, 0x69	; 105
 10e:	28 e1       	ldi	r18, 0x18	; 24
 110:	51 50       	subi	r21, 0x01	; 1
 112:	80 40       	sbci	r24, 0x00	; 0
 114:	20 40       	sbci	r18, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <main+0x90>
 118:	00 c0       	rjmp	.+0      	; 0x11a <main+0x9a>
 11a:	00 00       	nop
 11c:	3f ef       	ldi	r19, 0xFF	; 255
 11e:	4d e3       	ldi	r20, 0x3D	; 61
 120:	59 e4       	ldi	r21, 0x49	; 73
 122:	31 50       	subi	r19, 0x01	; 1
 124:	40 40       	sbci	r20, 0x00	; 0
 126:	50 40       	sbci	r21, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <main+0xa2>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0xac>
 12c:	00 00       	nop
		_delay_ms(LONG_DELAY);
		
	
															// E  .
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 12e:	85 b1       	in	r24, 0x05	; 5
 130:	89 27       	eor	r24, r25
 132:	85 b9       	out	0x05, r24	; 5
 134:	8f ef       	ldi	r24, 0xFF	; 255
 136:	29 e6       	ldi	r18, 0x69	; 105
 138:	38 e1       	ldi	r19, 0x18	; 24
 13a:	81 50       	subi	r24, 0x01	; 1
 13c:	20 40       	sbci	r18, 0x00	; 0
 13e:	30 40       	sbci	r19, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0xba>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0xc4>
 144:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 146:	2d 98       	cbi	0x05, 5	; 5
 148:	4f ef       	ldi	r20, 0xFF	; 255
 14a:	5d e3       	ldi	r21, 0x3D	; 61
 14c:	89 e4       	ldi	r24, 0x49	; 73
 14e:	41 50       	subi	r20, 0x01	; 1
 150:	50 40       	sbci	r21, 0x00	; 0
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0xce>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xd8>
 158:	00 00       	nop
		
		
															// 2  ..---
		for(a=0;a<2;a++)
			{
					PORTB = PORTB ^ (1<<LED_GREEN);			// ..
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	89 27       	eor	r24, r25
 15e:	85 b9       	out	0x05, r24	; 5
 160:	2f ef       	ldi	r18, 0xFF	; 255
 162:	39 e6       	ldi	r19, 0x69	; 105
 164:	48 e1       	ldi	r20, 0x18	; 24
 166:	21 50       	subi	r18, 0x01	; 1
 168:	30 40       	sbci	r19, 0x00	; 0
 16a:	40 40       	sbci	r20, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0xe6>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0xf0>
 170:	00 00       	nop
					_delay_ms(SHORT_DELAY);
					PORTB = PORTB & ~(1<<LED_GREEN);
 172:	2d 98       	cbi	0x05, 5	; 5
 174:	5f ef       	ldi	r21, 0xFF	; 255
 176:	89 e6       	ldi	r24, 0x69	; 105
 178:	28 e1       	ldi	r18, 0x18	; 24
 17a:	51 50       	subi	r21, 0x01	; 1
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	20 40       	sbci	r18, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0xfa>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x104>
 184:	00 00       	nop
		
		
															// 2  ..---
		for(a=0;a<2;a++)
			{
					PORTB = PORTB ^ (1<<LED_GREEN);			// ..
 186:	85 b1       	in	r24, 0x05	; 5
 188:	89 27       	eor	r24, r25
 18a:	85 b9       	out	0x05, r24	; 5
 18c:	3f ef       	ldi	r19, 0xFF	; 255
 18e:	49 e6       	ldi	r20, 0x69	; 105
 190:	58 e1       	ldi	r21, 0x18	; 24
 192:	31 50       	subi	r19, 0x01	; 1
 194:	40 40       	sbci	r20, 0x00	; 0
 196:	50 40       	sbci	r21, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x112>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x11c>
 19c:	00 00       	nop
					_delay_ms(SHORT_DELAY);
					PORTB = PORTB & ~(1<<LED_GREEN);
 19e:	2d 98       	cbi	0x05, 5	; 5
 1a0:	8f ef       	ldi	r24, 0xFF	; 255
 1a2:	29 e6       	ldi	r18, 0x69	; 105
 1a4:	38 e1       	ldi	r19, 0x18	; 24
 1a6:	81 50       	subi	r24, 0x01	; 1
 1a8:	20 40       	sbci	r18, 0x00	; 0
 1aa:	30 40       	sbci	r19, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0x126>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x130>
 1b0:	00 00       	nop
 1b2:	23 e0       	ldi	r18, 0x03	; 3
 1b4:	30 e0       	ldi	r19, 0x00	; 0
					
			}
					
		for(a=0;a<3;a++)
				{	
					PORTB = PORTB ^ (1<<LED_GREEN);			// -
 1b6:	85 b1       	in	r24, 0x05	; 5
 1b8:	89 27       	eor	r24, r25
 1ba:	85 b9       	out	0x05, r24	; 5
 1bc:	4f ef       	ldi	r20, 0xFF	; 255
 1be:	5d e3       	ldi	r21, 0x3D	; 61
 1c0:	89 e4       	ldi	r24, 0x49	; 73
 1c2:	41 50       	subi	r20, 0x01	; 1
 1c4:	50 40       	sbci	r21, 0x00	; 0
 1c6:	80 40       	sbci	r24, 0x00	; 0
 1c8:	e1 f7       	brne	.-8      	; 0x1c2 <main+0x142>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x14c>
 1cc:	00 00       	nop
					_delay_ms(LONG_DELAY);
					PORTB = PORTB & ~(1<<LED_GREEN);
 1ce:	2d 98       	cbi	0x05, 5	; 5
 1d0:	4f ef       	ldi	r20, 0xFF	; 255
 1d2:	59 e6       	ldi	r21, 0x69	; 105
 1d4:	88 e1       	ldi	r24, 0x18	; 24
 1d6:	41 50       	subi	r20, 0x01	; 1
 1d8:	50 40       	sbci	r21, 0x00	; 0
 1da:	80 40       	sbci	r24, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <main+0x156>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x160>
 1e0:	00 00       	nop
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	31 09       	sbc	r19, r1
					PORTB = PORTB & ~(1<<LED_GREEN);
					_delay_ms(SHORT_DELAY);
					
			}
					
		for(a=0;a<3;a++)
 1e6:	39 f7       	brne	.-50     	; 0x1b6 <main+0x136>
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
 1ea:	39 e6       	ldi	r19, 0x69	; 105
 1ec:	48 e1       	ldi	r20, 0x18	; 24
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	30 40       	sbci	r19, 0x00	; 0
 1f2:	40 40       	sbci	r20, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <main+0x16e>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0x178>
 1f8:	00 00       	nop
 1fa:	5f ef       	ldi	r21, 0xFF	; 255
 1fc:	89 e6       	ldi	r24, 0x69	; 105
 1fe:	28 e1       	ldi	r18, 0x18	; 24
 200:	51 50       	subi	r21, 0x01	; 1
 202:	80 40       	sbci	r24, 0x00	; 0
 204:	20 40       	sbci	r18, 0x00	; 0
 206:	e1 f7       	brne	.-8      	; 0x200 <main+0x180>
 208:	00 c0       	rjmp	.+0      	; 0x20a <main+0x18a>
 20a:	00 00       	nop
 20c:	3f ef       	ldi	r19, 0xFF	; 255
 20e:	4d e3       	ldi	r20, 0x3D	; 61
 210:	59 e4       	ldi	r21, 0x49	; 73
 212:	31 50       	subi	r19, 0x01	; 1
 214:	40 40       	sbci	r20, 0x00	; 0
 216:	50 40       	sbci	r21, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0x192>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x19c>
 21c:	00 00       	nop
 21e:	33 cf       	rjmp	.-410    	; 0x86 <main+0x6>

00000220 <_exit>:
 220:	f8 94       	cli

00000222 <__stop_program>:
 222:	ff cf       	rjmp	.-2      	; 0x222 <__stop_program>
