
morsecode.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000027e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000022a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000027e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002b0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b01  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000e11  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000427  00000000  00000000  0000149b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000018c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b7  00000000  00000000  000018e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000510  00000000  00000000  00001c9f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000021af  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 13 01 	jmp	0x226	; 0x226 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 */
int main(void)
{
    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);  //   << bite shift for PB5   | means or
  80:	25 9a       	sbi	0x04, 5	; 4

    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);   // logicky sucin &   ~negace
  82:	2d 98       	cbi	0x05, 5	; 5
        // Pause several miliseconds
        _delay_ms(SHORT_DELAY);

        // Invert LED in Data Register
        // PORTB = PORTB xor 0010 0000
        PORTB = PORTB ^ (1<<LED_GREEN); // ^  means xor only when different 
  84:	80 e2       	ldi	r24, 0x20	; 32
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  86:	2f ef       	ldi	r18, 0xFF	; 255
  88:	39 e6       	ldi	r19, 0x69	; 105
  8a:	98 e1       	ldi	r25, 0x18	; 24
  8c:	21 50       	subi	r18, 0x01	; 1
  8e:	30 40       	sbci	r19, 0x00	; 0
  90:	90 40       	sbci	r25, 0x00	; 0
  92:	e1 f7       	brne	.-8      	; 0x8c <main+0xc>
  94:	00 c0       	rjmp	.+0      	; 0x96 <main+0x16>
  96:	00 00       	nop
  98:	95 b1       	in	r25, 0x05	; 5
  9a:	98 27       	eor	r25, r24
  9c:	95 b9       	out	0x05, r25	; 5
  9e:	2f ef       	ldi	r18, 0xFF	; 255
  a0:	3d e3       	ldi	r19, 0x3D	; 61
  a2:	99 e4       	ldi	r25, 0x49	; 73
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	30 40       	sbci	r19, 0x00	; 0
  a8:	90 40       	sbci	r25, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x24>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x2e>
  ae:	00 00       	nop
		
		_delay_ms(LONG_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
  b0:	2d 98       	cbi	0x05, 5	; 5
  b2:	2f ef       	ldi	r18, 0xFF	; 255
  b4:	39 e6       	ldi	r19, 0x69	; 105
  b6:	98 e1       	ldi	r25, 0x18	; 24
  b8:	21 50       	subi	r18, 0x01	; 1
  ba:	30 40       	sbci	r19, 0x00	; 0
  bc:	90 40       	sbci	r25, 0x00	; 0
  be:	e1 f7       	brne	.-8      	; 0xb8 <main+0x38>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <main+0x42>
  c2:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB ^ (1<<LED_GREEN);
  c4:	95 b1       	in	r25, 0x05	; 5
  c6:	98 27       	eor	r25, r24
  c8:	95 b9       	out	0x05, r25	; 5
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	39 e6       	ldi	r19, 0x69	; 105
  ce:	98 e1       	ldi	r25, 0x18	; 24
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	30 40       	sbci	r19, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x50>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x5a>
  da:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
  dc:	2d 98       	cbi	0x05, 5	; 5
  de:	2f ef       	ldi	r18, 0xFF	; 255
  e0:	39 e6       	ldi	r19, 0x69	; 105
  e2:	98 e1       	ldi	r25, 0x18	; 24
  e4:	21 50       	subi	r18, 0x01	; 1
  e6:	30 40       	sbci	r19, 0x00	; 0
  e8:	90 40       	sbci	r25, 0x00	; 0
  ea:	e1 f7       	brne	.-8      	; 0xe4 <main+0x64>
  ec:	00 c0       	rjmp	.+0      	; 0xee <main+0x6e>
  ee:	00 00       	nop
		 _delay_ms(SHORT_DELAY);
		PORTB = PORTB ^ (1<<LED_GREEN);
  f0:	95 b1       	in	r25, 0x05	; 5
  f2:	98 27       	eor	r25, r24
  f4:	95 b9       	out	0x05, r25	; 5
  f6:	2f ef       	ldi	r18, 0xFF	; 255
  f8:	39 e6       	ldi	r19, 0x69	; 105
  fa:	98 e1       	ldi	r25, 0x18	; 24
  fc:	21 50       	subi	r18, 0x01	; 1
  fe:	30 40       	sbci	r19, 0x00	; 0
 100:	90 40       	sbci	r25, 0x00	; 0
 102:	e1 f7       	brne	.-8      	; 0xfc <main+0x7c>
 104:	00 c0       	rjmp	.+0      	; 0x106 <main+0x86>
 106:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 108:	2d 98       	cbi	0x05, 5	; 5
 10a:	2f ef       	ldi	r18, 0xFF	; 255
 10c:	3d e3       	ldi	r19, 0x3D	; 61
 10e:	99 e4       	ldi	r25, 0x49	; 73
 110:	21 50       	subi	r18, 0x01	; 1
 112:	30 40       	sbci	r19, 0x00	; 0
 114:	90 40       	sbci	r25, 0x00	; 0
 116:	e1 f7       	brne	.-8      	; 0x110 <main+0x90>
 118:	00 c0       	rjmp	.+0      	; 0x11a <main+0x9a>
 11a:	00 00       	nop
		_delay_ms(LONG_DELAY);
		// E
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 11c:	95 b1       	in	r25, 0x05	; 5
 11e:	98 27       	eor	r25, r24
 120:	95 b9       	out	0x05, r25	; 5
 122:	2f ef       	ldi	r18, 0xFF	; 255
 124:	39 e6       	ldi	r19, 0x69	; 105
 126:	98 e1       	ldi	r25, 0x18	; 24
 128:	21 50       	subi	r18, 0x01	; 1
 12a:	30 40       	sbci	r19, 0x00	; 0
 12c:	90 40       	sbci	r25, 0x00	; 0
 12e:	e1 f7       	brne	.-8      	; 0x128 <main+0xa8>
 130:	00 c0       	rjmp	.+0      	; 0x132 <main+0xb2>
 132:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 134:	2d 98       	cbi	0x05, 5	; 5
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	3d e3       	ldi	r19, 0x3D	; 61
 13a:	99 e4       	ldi	r25, 0x49	; 73
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	30 40       	sbci	r19, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0xbc>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0xc6>
 146:	00 00       	nop
		_delay_ms(LONG_DELAY);
		
		
		// 2
		
		PORTB = PORTB ^ (1<<LED_GREEN);			//. 
 148:	95 b1       	in	r25, 0x05	; 5
 14a:	98 27       	eor	r25, r24
 14c:	95 b9       	out	0x05, r25	; 5
 14e:	2f ef       	ldi	r18, 0xFF	; 255
 150:	39 e6       	ldi	r19, 0x69	; 105
 152:	98 e1       	ldi	r25, 0x18	; 24
 154:	21 50       	subi	r18, 0x01	; 1
 156:	30 40       	sbci	r19, 0x00	; 0
 158:	90 40       	sbci	r25, 0x00	; 0
 15a:	e1 f7       	brne	.-8      	; 0x154 <main+0xd4>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <main+0xde>
 15e:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 160:	2d 98       	cbi	0x05, 5	; 5
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	39 e6       	ldi	r19, 0x69	; 105
 166:	98 e1       	ldi	r25, 0x18	; 24
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	30 40       	sbci	r19, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0xe8>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0xf2>
 172:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB ^ (1<<LED_GREEN);			//.
 174:	95 b1       	in	r25, 0x05	; 5
 176:	98 27       	eor	r25, r24
 178:	95 b9       	out	0x05, r25	; 5
 17a:	2f ef       	ldi	r18, 0xFF	; 255
 17c:	39 e6       	ldi	r19, 0x69	; 105
 17e:	98 e1       	ldi	r25, 0x18	; 24
 180:	21 50       	subi	r18, 0x01	; 1
 182:	30 40       	sbci	r19, 0x00	; 0
 184:	90 40       	sbci	r25, 0x00	; 0
 186:	e1 f7       	brne	.-8      	; 0x180 <main+0x100>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0x10a>
 18a:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 18c:	2d 98       	cbi	0x05, 5	; 5
 18e:	2f ef       	ldi	r18, 0xFF	; 255
 190:	39 e6       	ldi	r19, 0x69	; 105
 192:	98 e1       	ldi	r25, 0x18	; 24
 194:	21 50       	subi	r18, 0x01	; 1
 196:	30 40       	sbci	r19, 0x00	; 0
 198:	90 40       	sbci	r25, 0x00	; 0
 19a:	e1 f7       	brne	.-8      	; 0x194 <main+0x114>
 19c:	00 c0       	rjmp	.+0      	; 0x19e <main+0x11e>
 19e:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		
		PORTB = PORTB ^ (1<<LED_GREEN);			// -
 1a0:	95 b1       	in	r25, 0x05	; 5
 1a2:	98 27       	eor	r25, r24
 1a4:	95 b9       	out	0x05, r25	; 5
 1a6:	2f ef       	ldi	r18, 0xFF	; 255
 1a8:	3d e3       	ldi	r19, 0x3D	; 61
 1aa:	99 e4       	ldi	r25, 0x49	; 73
 1ac:	21 50       	subi	r18, 0x01	; 1
 1ae:	30 40       	sbci	r19, 0x00	; 0
 1b0:	90 40       	sbci	r25, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <main+0x12c>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x136>
 1b6:	00 00       	nop
		_delay_ms(LONG_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 1b8:	2d 98       	cbi	0x05, 5	; 5
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	39 e6       	ldi	r19, 0x69	; 105
 1be:	98 e1       	ldi	r25, 0x18	; 24
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	30 40       	sbci	r19, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x140>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x14a>
 1ca:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB ^ (1<<LED_GREEN);			// -
 1cc:	95 b1       	in	r25, 0x05	; 5
 1ce:	98 27       	eor	r25, r24
 1d0:	95 b9       	out	0x05, r25	; 5
 1d2:	2f ef       	ldi	r18, 0xFF	; 255
 1d4:	3d e3       	ldi	r19, 0x3D	; 61
 1d6:	99 e4       	ldi	r25, 0x49	; 73
 1d8:	21 50       	subi	r18, 0x01	; 1
 1da:	30 40       	sbci	r19, 0x00	; 0
 1dc:	90 40       	sbci	r25, 0x00	; 0
 1de:	e1 f7       	brne	.-8      	; 0x1d8 <main+0x158>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <main+0x162>
 1e2:	00 00       	nop
		_delay_ms(LONG_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 1e4:	2d 98       	cbi	0x05, 5	; 5
 1e6:	2f ef       	ldi	r18, 0xFF	; 255
 1e8:	39 e6       	ldi	r19, 0x69	; 105
 1ea:	98 e1       	ldi	r25, 0x18	; 24
 1ec:	21 50       	subi	r18, 0x01	; 1
 1ee:	30 40       	sbci	r19, 0x00	; 0
 1f0:	90 40       	sbci	r25, 0x00	; 0
 1f2:	e1 f7       	brne	.-8      	; 0x1ec <main+0x16c>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <main+0x176>
 1f6:	00 00       	nop
		_delay_ms(SHORT_DELAY);
		PORTB = PORTB ^ (1<<LED_GREEN);			// -
 1f8:	95 b1       	in	r25, 0x05	; 5
 1fa:	98 27       	eor	r25, r24
 1fc:	95 b9       	out	0x05, r25	; 5
 1fe:	2f ef       	ldi	r18, 0xFF	; 255
 200:	3d e3       	ldi	r19, 0x3D	; 61
 202:	99 e4       	ldi	r25, 0x49	; 73
 204:	21 50       	subi	r18, 0x01	; 1
 206:	30 40       	sbci	r19, 0x00	; 0
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e1 f7       	brne	.-8      	; 0x204 <main+0x184>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <main+0x18e>
 20e:	00 00       	nop
		_delay_ms(LONG_DELAY);
		PORTB = PORTB & ~(1<<LED_GREEN);
 210:	2d 98       	cbi	0x05, 5	; 5
 212:	2f ef       	ldi	r18, 0xFF	; 255
 214:	39 e6       	ldi	r19, 0x69	; 105
 216:	98 e1       	ldi	r25, 0x18	; 24
 218:	21 50       	subi	r18, 0x01	; 1
 21a:	30 40       	sbci	r19, 0x00	; 0
 21c:	90 40       	sbci	r25, 0x00	; 0
 21e:	e1 f7       	brne	.-8      	; 0x218 <main+0x198>
 220:	00 c0       	rjmp	.+0      	; 0x222 <main+0x1a2>
 222:	00 00       	nop
 224:	30 cf       	rjmp	.-416    	; 0x86 <main+0x6>

00000226 <_exit>:
 226:	f8 94       	cli

00000228 <__stop_program>:
 228:	ff cf       	rjmp	.-2      	; 0x228 <__stop_program>
